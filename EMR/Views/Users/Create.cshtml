@model EMR.Models.UserViewModel

@using (Ajax.BeginForm("Create", new { }, new AjaxOptions() { HttpMethod = "POST", OnSuccess = "Created(data);", OnFailure = "Fail();" }, new { @id = "form_edit" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Создание пользователя</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PasswordComfirm, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PasswordComfirm, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PasswordComfirm, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Role_Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Role_Id, ((IEnumerable<SelectListItem>)ViewBag.Roles).Where(r => r.Value != "1" && r.Value != "8"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Role_Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="box-footer">
                <div class="row">
                    <div class="col-xs-6">
                        <input type="submit" value="Создать" class="btn btn-success" />
                    </div>
                    <div class="col-xs-6">
                        <button type="button" class="btn btn-default pull-right" data-dismiss="modal">Отмена</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script>
    function Created(data) {
        if (data == '1') {
            //showSuccessNotify('Пользователь создан!');
            $('#modal-default').modal('hide');
            $('#filterForm').submit();
        }
        else {
            $('#modalContent').html(data);
        }

        }
        function Fail() {
           // showErrorNotify('Ошибка добавления информации! Проверьте правильность внесения информации!');
        }
</script>
